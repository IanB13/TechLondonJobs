{"version":3,"sources":["services/APIRequest.js","components/LinkList.jsx","components/Summary.jsx","App.js","index.js"],"names":["getJobLinks","a","axios","get","jobLinks","data","IndividaulLink","link","icon","linkType","List","Item","Icon","name","Content","jobTitle","href","url","jobID","LinkList","Links","console","log","length","map","key","_id","Summary","className","App","useState","loading","changeJobLinks","useEffect","APIRequests","then","links","liveLinks","filter","deadLink","deadLinks","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPAMA,IAKe,GACXA,YANa,uCAAG,4BAAAC,EAAA,sEACOC,IAAMC,IAAN,UANd,OAMc,cADP,cACVC,EADU,yBAETA,EAASC,MAFA,2CAAH,sD,yBCsBXC,EAAiB,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,KACjBC,EAAO,KAEX,OAHwC,EAAdC,UAItB,IAAK,OACDD,EAAO,uBACP,MAEJ,QACIA,EAAO,uBAIf,OACI,kBAACE,EAAA,EAAKC,KAAN,KACA,kBAACD,EAAA,EAAKE,KAAN,CAAWC,KAAML,IACjB,kBAACE,EAAA,EAAKI,QAAN,KACA,iCACI,iCAAUP,EAAKQ,UACf,uBAAGC,KAAMT,EAAKU,KAAd,wBAFJ,IAEgD,6BAC5C,uBAAGD,KAAI,6CAAwCT,EAAKW,QAApD,oCASGC,EAtDC,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,MAAMX,EAAY,EAAZA,SAIxB,OAHAY,QAAQC,IAAIF,GAGU,IAAjBA,EAAMG,OAEP,oCACA,4BAAKd,GACL,kBAACC,EAAA,EAAD,KACCU,EAAMI,KAAK,SAAAjB,GAAI,OAAI,kBAAC,EAAD,CAAgBA,KAAOA,EAAME,SAAWA,EAAUgB,IAAMlB,EAAKmB,WAOjF,6BACI,4BAAKjB,GACL,6CCNOkB,EAdC,WAEZ,OACI,yBAAKC,UAAW,WAAhB,6CAC6C,uBAAGZ,KAAK,sCAAR,eAD7C,qQC8BOa,MA3Bf,WAAgB,IAAD,EACsBC,mBAAS,CAAC,CAACC,SAAQ,KADzC,mBACN3B,EADM,KACI4B,EADJ,KAGbC,qBAAU,WACRC,EAAYlC,cAAcmC,MAAK,SAAAC,GAC7BJ,EAAeI,QAEhB,IAEH,IAAMC,EAAYjC,EAASkC,QAAO,SAAA/B,GAAI,OAAsB,IAAlBA,EAAKgC,YACzCC,EAAYpC,EAASkC,QAAO,SAAA/B,GAAI,OAAsB,IAAlBA,EAAKgC,YAE/C,OACE,yBAAKX,UAAU,iBACX,kBAAC,EAAD,MACF,6BACE,kBAAC,EAAD,CAAUR,MAAQiB,EAAW5B,SAAU,UAEzC,6BACE,kBAAC,EAAD,CAAUW,MAASoB,EAAW/B,SAAW,YCtBjDgC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.65b19462.chunk.js","sourcesContent":["import axios from 'axios';\r\nlet baseURL =\"/api\"\r\n// development , test and production are pre-defined \r\nif (process.env.NODE_ENV === 'development'){\r\n baseURL = 'http://localhost:4000/api'\r\n}\r\nconst getJobLinks = async () =>{\r\n    const jobLinks = await axios.get(`${baseURL}/joblinks`) \r\n    return jobLinks.data\r\n  }\r\n\r\nexport default {\r\n    getJobLinks\r\n}","import React from 'react'\r\nimport {List} from 'semantic-ui-react'\r\n\r\nconst LinkList =({Links,linkType})=>{\r\nconsole.log(Links)\r\n\r\n\r\nif(!(Links.length === 0)){\r\n    return (\r\n    <>\r\n    <h2>{linkType}</h2>\r\n    <List>\r\n    {Links.map( link => <IndividaulLink link ={link} linkType ={linkType} key ={link._id}/>)}\r\n    </List>\r\n    </>\r\n)\r\n}\r\n\r\nelse return (\r\n    <div>\r\n        <h2>{linkType}</h2>\r\n        <div>...loading</div>\r\n    </div>\r\n)\r\n\r\n}\r\n\r\n\r\nconst IndividaulLink = ({link,linkType}) => {\r\n    let icon = null;\r\n    //for more  options in future\r\n    switch (linkType) {\r\n        case \"Live\":\r\n            icon = \"check circle outline\"\r\n            break;\r\n    \r\n        default:\r\n            icon = \"times circle outline\"\r\n            break;\r\n    }\r\n\r\n    return (\r\n        <List.Item>\r\n        <List.Icon name={icon} />\r\n        <List.Content>\r\n        <details>\r\n            <summary>{link.jobTitle}</summary>\r\n            <a href={link.url}>Link to Job Website </a> <br/>\r\n            <a href={`https://tech.london/discovery/jobs/${link.jobID}`}>Link to Tech London Website </a>\r\n        </details>\r\n        </List.Content>\r\n        </List.Item>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default LinkList;","import React from 'react';\r\nconst Summary = () =>{\r\n\r\n    return(\r\n        <div className =\"summary\">\r\n           This web app uses puppeteer to web scrape <a href='https://tech.london/discovery/jobs'>Tech.London</a> and find jobs that are still available.\r\n            Jobs were checked by following the page url and check if the console has any HTTP server errors in the 400 or 500s range. \r\n            This method is not 100% accurate but works for the majority of cases.\r\n            Check out the code here\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Summary;","import React,{useState,useEffect} from 'react';\nimport APIRequests from './services/APIRequest';\nimport './App.css';\nimport 'semantic-ui-css/semantic.min.css'\nimport LinkList from './components/LinkList';\nimport Summary from './components/Summary';\n\nfunction App() {\n  const [jobLinks, changeJobLinks] = useState([{loading:true}]);\n  \n  useEffect(() => {\n    APIRequests.getJobLinks().then(links => {\n      changeJobLinks(links)\n    })\n  }, [])\n\n  const liveLinks = jobLinks.filter(link => link.deadLink === false);\n  const deadLinks = jobLinks.filter(link => link.deadLink === true);\n \n  return (\n    <div className=\"App container\">\n        <Summary />\n      <div>\n        <LinkList Links ={liveLinks} linkType =\"Live\" />\n      </div>\n      <div>\n        <LinkList Links = {deadLinks} linkType = \"Dead\" />\n      </div>\n    </div>\n  );\n\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}