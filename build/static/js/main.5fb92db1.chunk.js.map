{"version":3,"sources":["services/APIRequest.js","components/IndividualLink.jsx","components/LinkList.jsx","components/Summary.jsx","components/JobPostings.jsx","App.js","reducers/actions.js","reducers/jobPostingsReducer.js","reducers/store.js","index.js"],"names":["getJobLinks","a","axios","get","jobLinks","data","IndividaulLink","link","icon","linkType","List","Item","style","Icon","name","Content","jobTitle","href","url","jobID","LinkList","links","Links","h2style","length","className","map","key","_id","Summary","totalJobs","JobPostings","jobPostings","liveLinks","filter","deadLink","deadLinks","App","dispatch","useDispatch","useEffect","APIRequest","type","useSelector","state","jobPostingReducer","action","console","log","reducer","combineReducers","jobPostingsReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oQAMA,IAKe,GACbA,YANe,uCAAG,4BAAAC,EAAA,sEACKC,IAAMC,IAAN,UANX,OAMW,cADL,cACZC,EADY,yBAEXA,EAASC,MAFE,2CAAH,sD,SCyBFC,EA5BQ,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAClBC,EAAO,KAEX,OAH2C,EAAfC,UAIxB,IAAK,OACDD,EAAO,uBACP,MAEJ,QACIA,EAAO,uBAIf,OACI,kBAACE,EAAA,EAAKC,KAAN,CAAWC,MAAO,CAAE,WAAc,UAC9B,kBAACF,EAAA,EAAKG,KAAN,CAAWC,KAAMN,IACjB,kBAACE,EAAA,EAAKK,QAAN,CAAcH,MAAO,CAAE,WAAc,UACjC,iCACI,iCAAUL,EAAKS,UACf,uBAAGC,KAAMV,EAAKW,KAAd,wBAFJ,IAEgD,6BAC5C,uBAAGD,KAAI,6CAAwCV,EAAKY,QAApD,oCCeLC,EAlCE,SAAC,GAAgC,IAAvBC,EAAsB,EAA7BC,MAAcb,EAAe,EAAfA,SAC1Bc,EAAU,KAEd,OAAQd,GACJ,IAAK,OACDc,EAAU,CAAE,YAAe,SAC3B,MAEJ,QACIA,EAAU,CAAE,YAAe,OAInC,OAAuB,IAAjBF,EAAMG,OAEJ,oCACI,wBAAIZ,MAAOW,GAAUd,EAArB,cACA,uBAAGgB,UAAU,WAAb,eAAoCJ,EAAMG,QAC1C,kBAACd,EAAA,EAAD,KACKW,EAAMK,KAAI,SAAAnB,GAAI,OAAI,kBAAC,EAAD,CAAgBA,KAAMA,EAAME,SAAUA,EAAUkB,IAAKpB,EAAKqB,WAOzF,6BACI,wBAAIhB,MAAOW,GAAUd,EAArB,cACA,6CCfGoB,EAhBC,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAEf,OACI,yBAAKL,UAAU,WACX,uDACA,uBAAGA,UAAU,WAAb,eAAsCK,GAAa,cAFvD,6CAI8C,uBAAGb,KAAK,sCAAR,eAJ9C,oLAMmB,iDANnB,4DAOuB,uBAAGA,KAAK,4CAAR,QAPvB,MCmBOc,EAnBK,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAEbC,EAAYD,EAAYE,QAAO,SAAA3B,GAAI,OAAsB,IAAlBA,EAAK4B,YAC5CC,EAAYJ,EAAYE,QAAO,SAAA3B,GAAI,OAAsB,IAAlBA,EAAK4B,YAC5CL,EAAYE,EAAYR,OAE9B,OACI,oCACI,kBAAC,EAAD,CAASM,UAAWA,IACpB,6BACI,kBAAC,EAAD,CAAUR,MAAOW,EAAWxB,SAAS,UAEzC,6BACI,kBAAC,EAAD,CAAUa,MAAOc,EAAW3B,SAAS,YCUtC4B,MApBf,WACE,IAAMC,EAAWC,cAEjBC,qBAAU,WACRF,ECPA,uCAAO,WAAMA,GAAN,eAAArC,EAAA,sEACuBwC,EAAWzC,cADlC,OACGgC,EADH,OAEHM,EAAS,CACLI,KAAM,mBACNrC,KAAM2B,IAJP,2CAAP,yDDQC,CAACM,IAGJ,IAAMN,EAAcW,aAAY,SAAAC,GAAK,OAAIA,EAAMZ,eAG/C,OACE,yBAAKP,UAAU,iBACb,kBAAC,EAAD,CAAaO,YAAaA,M,0BENjBa,EAbW,WAAyB,IAAxBD,EAAuB,uDAAf,GAAIE,EAAW,uCAChD,OAAQA,EAAOJ,MACb,IAAK,mBACH,IAAMV,EAAcc,EAAOzC,KAG3B,OAFA0C,QAAQC,IAAI,0BACZD,QAAQC,IAAIhB,GACLA,EACT,QACE,OAAOY,ICHPK,EAAUC,0BAAgB,CAC9BlB,YAAamB,IAGFC,EAAQC,sBACnBJ,EACAK,8BACEC,0BAAgBC,OCNpBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUP,MAAOA,GACf,kBAAC,EAAD,OAFJ,KAKAQ,SAASC,eAAe,W","file":"static/js/main.5fb92db1.chunk.js","sourcesContent":["import axios from 'axios';\r\nlet baseURL = \"/api\"\r\n// development , test and production are pre-defined \r\nif (process.env.NODE_ENV === 'development') {\r\n  baseURL = 'http://localhost:4000/api'\r\n}\r\nconst getJobLinks = async () => {\r\n  const jobLinks = await axios.get(`${baseURL}/joblinks`)\r\n  return jobLinks.data\r\n}\r\n\r\nexport default {\r\n  getJobLinks\r\n}","import React from 'react';\r\nimport { List } from 'semantic-ui-react';\r\n\r\nconst IndividaulLink = ({ link, linkType }) => {\r\n    let icon = null;\r\n    //for more  options in future\r\n    switch (linkType) {\r\n        case \"Live\":\r\n            icon = \"check circle outline\"\r\n            break;\r\n\r\n        default:\r\n            icon = \"times circle outline\"\r\n            break;\r\n    }\r\n\r\n    return (\r\n        <List.Item style={{ \"lineHeight\": \"1.6em\" }}>\r\n            <List.Icon name={icon} />\r\n            <List.Content style={{ \"lineHeight\": \"1.6em\" }}>\r\n                <details>\r\n                    <summary>{link.jobTitle}</summary>\r\n                    <a href={link.url}>Link to Job Website </a> <br />\r\n                    <a href={`https://tech.london/discovery/jobs/${link.jobID}`}>Link to Tech London Website </a>\r\n                </details>\r\n            </List.Content>\r\n        </List.Item>\r\n    )\r\n\r\n}\r\n\r\nexport default IndividaulLink;","import React from 'react';\r\nimport { List } from 'semantic-ui-react';\r\nimport IndividaulLink from './IndividualLink';\r\n\r\nconst LinkList = ({ Links: links, linkType }) => {\r\n    let h2style = null;\r\n    //for more  options in future\r\n    switch (linkType) {\r\n        case \"Live\":\r\n            h2style = { \"borderColor\": \"green\" }\r\n            break;\r\n\r\n        default:\r\n            h2style = { \"borderColor\": \"red\" }\r\n            break;\r\n    }\r\n\r\n    if (!(links.length === 0)) {\r\n        return (\r\n            <>\r\n                <h2 style={h2style}>{linkType} Job Links</h2>\r\n                <p className=\"jobsNum\">Total Jobs: {links.length}</p>\r\n                <List>\r\n                    {links.map(link => <IndividaulLink link={link} linkType={linkType} key={link._id} />)}\r\n                </List>\r\n            </>\r\n        )\r\n    }\r\n\r\n    else return (\r\n        <div>\r\n            <h2 style={h2style}>{linkType} Job Links</h2>\r\n            <div>...loading</div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default LinkList;","import React from 'react';\r\nconst Summary = ({ totalJobs }) => {\r\n\r\n    return (\r\n        <div className=\"summary\">\r\n            <h1>Tech.London Job Search </h1>\r\n            <p className=\"jobsNum\">Total Jobs: {(!totalJobs) ? '...loading' : totalJobs\r\n            }</p>\r\n            This web app uses puppeteer to web scrape <a href='https://tech.london/discovery/jobs'>Tech.London</a> and find jobs that are still available.\r\n            Jobs were checked using Puppeteer, and said to be dead if the console has any HTTP server errors in the 400 - 599 range.\r\n            This method is <b>not 100% accurate </b> but works for the majority of cases.\r\n            Check out the code <a href='https://github.com/IanB13/TechLondonJobs'>here</a>.\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Summary;","import React from 'react';\r\nimport LinkList from './LinkList';\r\nimport Summary from './Summary';\r\n\r\nconst JobPostings = ({ jobPostings }) => {\r\n\r\n    const liveLinks = jobPostings.filter(link => link.deadLink === false);\r\n    const deadLinks = jobPostings.filter(link => link.deadLink === true);\r\n    const totalJobs = jobPostings.length;\r\n\r\n    return (\r\n        <>\r\n            <Summary totalJobs={totalJobs} />\r\n            <div>\r\n                <LinkList Links={liveLinks} linkType=\"Live\" />\r\n            </div>\r\n            <div>\r\n                <LinkList Links={deadLinks} linkType=\"Dead\" />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default JobPostings;","import React, { useEffect } from 'react';\r\nimport './App.css';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { initializeJobPostings } from './reducers/actions';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport JobPostings from './components/JobPostings';\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(initializeJobPostings())\r\n  }, [dispatch])\r\n\r\n\r\n  const jobPostings = useSelector(state => state.jobPostings)\r\n\r\n\r\n  return (\r\n    <div className=\"App container\">\r\n      <JobPostings jobPostings={jobPostings} />\r\n    </div>\r\n  );\r\n\r\n\r\n}\r\n\r\nexport default App;\r\n","import APIRequest from '../services/APIRequest';\r\n\r\n//thunk middleware allows async return \r\nexport const initializeJobPostings = () => {\r\n    return async dispatch => {\r\n        const jobPostings = await APIRequest.getJobLinks();\r\n        dispatch({\r\n            type: 'INIT_JOBPOSTINGS',\r\n            data: jobPostings,\r\n        })\r\n    }\r\n}","\r\nconst jobPostingReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'INIT_JOBPOSTINGS':\r\n      const jobPostings = action.data\r\n      console.log(\"job posting in reducer\")\r\n      console.log(jobPostings)\r\n      return jobPostings\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n\r\nexport default jobPostingReducer","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nimport jobPostingsReducer from './jobPostingsReducer'\r\n\r\nconst reducer = combineReducers({\r\n  jobPostings: jobPostingsReducer\r\n})\r\n\r\nexport const store = createStore(\r\n  reducer,\r\n  composeWithDevTools(\r\n    applyMiddleware(thunk)\r\n  )\r\n)","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport App from './App';\r\nimport { store } from './reducers/store';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>,\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}